name: Build MasterPlan

on: [workflow_dispatch, push]

jobs:
  buildLinux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Download Pre-reqs
        run: |
          sudo apt update
          sudo apt install libx11-dev -y
          sudo apt install libasound2-dev

      - name: Build
        run: |
          go run build_script/build.go -b -c

      - uses: actions/upload-artifact@v4
        with:
          name: Linux-0.9-Release-amd64
          path: ./bin/linux-0.9-Release-amd64.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: Linux-0.9-Demo-amd64
          path: ./bin/linux-0.9-Demo-amd64.tar.gz

      # - name: Test
      #   run: timeout 10s go run .

  # For some reason, building on Windows creates a terminal window despite specifying -H=windowsgui in the build settings. For now, I'll crosscompile on my machine.

  buildWindows:
    runs-on: windows-2025
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git

      - name: Download Dependencies
        run: pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-go --noconfirm

      - name: Build
        run: |
          go run build_script/build.go -b -c

      - uses: actions/upload-artifact@v4
        with:
          name: Windows-0.9-Release-amd64
          path: ./bin/windows-0.9-Release-amd64.zip

      - uses: actions/upload-artifact@v4
        with:
          name: Windows-0.9-Demo-amd64
          path: ./bin/windows-0.9-Demo-amd64.zip

      # - name: Test
      #   run: |
      #     start go run .
      #     timeout /t 10
      #     taskkill /im go /f

  buildMacAmd64:
    runs-on: macos-13 # Earliest MacOS, deprecated
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Download Pre-reqs
        run: brew install dylibbundler

      - name: Build
        run: go run build_script/build.go -b

      - name: Bundle Dependencies
        run: |
          dylibbundler -od -b -x ./bin/darwin-0.9-Release-amd64/MasterPlan.app/Contents/MacOS/masterplan -d ./bin/darwin-0.9-Release-amd64/MasterPlan.app/Contents/libs -p @executable_path/../libs
          dylibbundler -od -b -x ./bin/darwin-0.9-Demo-amd64/MasterPlan.app/Contents/MacOS/masterplan -d ./bin/darwin-0.9-Demo-amd64/MasterPlan.app/Contents/libs -p @executable_path/../libs

      - name: Compress
        run: go run build_script/build.go -c

      - uses: actions/upload-artifact@v4
        with:
          name: MacOS-0.9-Release-amd64
          path: ./bin/darwin-0.9-Release-amd64.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: MacOS-0.9-Demo-amd64
          path: ./bin/darwin-0.9-Demo-amd64.tar.gz

      # - name: Test
      #   run: go run .

  buildMacArm64:
    runs-on: macos-14 # Deprecated, earliest ARM64 on GH Runners
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Download Pre-reqs
        run: brew install dylibbundler

      - name: Build
        run: go run build_script/build.go -b -os darwin -arch arm64

      - name: Bundle Dependencies
        run: |
          dylibbundler -od -b -x ./bin/darwin-0.9-Release-arm64/MasterPlan.app/Contents/MacOS/masterplan -d ./bin/darwin-0.9-Release-arm64/MasterPlan.app/Contents/libs -p @executable_path/../libs
          dylibbundler -od -b -x ./bin/darwin-0.9-Demo-arm64/MasterPlan.app/Contents/MacOS/masterplan -d ./bin/darwin-0.9-Demo-arm64/MasterPlan.app/Contents/libs -p @executable_path/../libs

      - name: Compress
        run: go run build_script/build.go -c

      - uses: actions/upload-artifact@v4
        with:
          name: MacOS-0.9-Release-arm64
          path: bin/darwin-0.9-Release-arm64.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: MacOS-0.9-Demo-arm64
          path: bin/darwin-0.9-Demo-arm64.tar.gz

      # - name: Test
      #   run: go run .
